---
 
   - name: Install aptitude using apt
     apt: name=aptitude state=latest update_cache=yes force_apt_get=yes

   - name: Install required system packages
     apt: name={{ item }} state=latest update_cache=yes
     loop: [ 'apt-transport-https', 'ca-certificates', 'curl', 'software-properties-common', 'python3-pip', 'virtualenv', 'python3-setuptools']

   - name: Add Docker GPG apt Key
     apt_key:
       url: https://download.docker.com/linux/ubuntu/gpg
       state: present

   - name: Add Docker Repository
     apt_repository:
       repo: deb https://download.docker.com/linux/ubuntu bionic stable
       state: present

   - name: install docker
     apt:
       name: "{{item}}"
       state: latest
       update_cache: yes
     loop:
       - docker-ce
       - docker-ce-cli
       - containerd.io

   - name: docker was started and enabled
     service:
       name: docker
       state: started
       enabled: yes
   
   - name: run docker without sudo
     shell:
       cmd: sudo chmod 666 /var/run/docker.sock
       chdir: /home/azureuser
       executable: /bin/bash
    
   - name: Transfer file from agentServer to hosting servers
     synchronize:
       src: /home/azureuser/myagent/_work/1/a/bootcamp.zip
       dest: /home/azureuser/
   
   - name: kill previous docker
     shell: |
       if  [ $( docker ps -aq | wc -w ) -gt 0 ]; then
        docker rm -f $(docker ps -aq)
        docker rmi $(docker images -q)
       fi

   - name: load docker image from file
     shell: docker load -i /home/azureuser/bootcamp.zip

   - name: run Docker image
     shell: docker run --restart always -d -p 0.0.0.0:8080:8080/tcp $(docker images -q)

   - name: npm run initdb
     shell: docker exec $(sudo docker ps -aq) npm run initdb
     run_once: true

 


 





